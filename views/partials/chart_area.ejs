    <%# Area Chart %>
    <div class="col-xl-8 col-lg-7">
      <div class="card shadow mb-4">
        <%# Card Header - Dropdown %>
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
          <h6 class="m-0 font-weight-bold text-primary">Cycling Time Overview</h6>
          
            <ul class="nav nav-tabs" id="myTab" role="tablist">
              <li class="nav-item chart-tab chart-tab-week" value="week">
                <a class="nav-link" value="week" id="week-tab" data-toggle="tab" role="tab" aria-controls="week" aria-selected="false">W</a>
              </li>
              <li class="nav-item chart-tab chart-tab-month" value="month">
                <a class="nav-link active" value="month" id="month-tab" data-toggle="tab" role="tab" aria-controls="month" aria-selected="true">M</a>
              </li>
              <li class="nav-item chart-tab chart-tab-year" value="year">
                <a class="nav-link" value="year" id="year-tab" data-toggle="tab" role="tab" aria-controls="year" aria-selected="false">Y</a>
              </li>
            </ul>

          <%# <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
              <div class="dropdown-header">Dropdown Header:</div>
              <a class="dropdown-item" href="#">Action</a>
              <a class="dropdown-item" href="#">Another action</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="#">Something else here</a>
            </div>
          </div> %>
        </div>
        <%# Card Body %>
        <div class="card-body">
          <div class="chart-area">

            <div class="d-flex justify-content-between">
              <i class="my-arrows fas fa-chevron-left"></i>
              <div id="date-range">date range goes here</div>
              <i class="my-arrows fas fa-chevron-right"></i>
            </div>

            <canvas id="myAreaChart"></canvas>


            <script>
            // Set new default font family and font color to mimic Bootstrap's default styling
            (Chart.defaults.global.defaultFontFamily = "Nunito"),
              '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
            Chart.defaults.global.defaultFontColor = "#858796";

            function number_format(number, decimals, dec_point, thousands_sep) {
              // *     example: number_format(1234.56, 2, ',', ' ');
              // *     return: '1 234,56'
              number = (number + "").replace(",", "").replace(" ", "");
              var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = typeof thousands_sep === "undefined" ? "," : thousands_sep,
                dec = typeof dec_point === "undefined" ? "." : dec_point,
                s = "",
                toFixedFix = function(n, prec) {
                  var k = Math.pow(10, prec);
                  return "" + Math.round(n * k) / k;
                };
              // Fix for IE parseFloat(0.55).toFixed(0) = 0;
              s = (prec ? toFixedFix(n, prec) : "" + Math.round(n)).split(".");
              if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
              }
              if ((s[1] || "").length < prec) {
                s[1] = s[1] || "";
                s[1] += new Array(prec - s[1].length + 1).join("0");
              }
              return s.join(dec);
            }

            // Area Chart Example
            var ctx = document.getElementById("myAreaChart")
            // .getContext('2d');
            var myBarChart = new Chart(ctx, {
              type: "bar",
              data: {
                labels: <%- JSON.stringify(vm.area.datasets.map(set => set.label)) %>,
                datasets: [
                  {
                    label: "Cycling Time",
                    data: <%- JSON.stringify(vm.area.datasets.map(set => set.time)) %>,
                    backgroundColor: "rgb(187,181,153, 1)"
                    // borderColor: "rgba(78, 115, 223, 1)"
                  }, 
                  {
                    label: "Taximode",
                    data: <%- JSON.stringify(vm.area.datasets.map(set => set.time)) %>,
                    backgroundColor: "rgb(187,181,153, 0.5)"
                  }
                ]
              },
              options: {
                // responsive: true,
                title: {
                  display: false,
                  text: 'Bar Chart - Stacked'
                },
                maintainAspectRatio: false,
                layout: {
                  padding: {
                    left: 10,
                    right: 25,
                    top: 0,
                    bottom: 0
                  }
                },
                scales: {
                  xAxes: [
                    {
                      stacked: true,
                      time: {
                        unit: "date"
                      },
                      // TODO: check and delete if not needed
                      gridLines: {
                        display: false,
                        drawBorder: false
                      },
                      ticks: {
                        maxTicksLimit: 7
                      }
                    }
                  ],
                  yAxes: [
                    {
                      stacked: true,
                      ticks: {
                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks
                        callback: function(value, index, values) {
                          return number_format(value) + "min.";
                        }
                      },
                      // TODO: check and delete if not needed                      
                      gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                      }
                    }
                  ]
                },
                legend: {
                  display: true
                },
                tooltips: {
                  backgroundColor: "rgb(255,255,255)",
                  bodyFontColor: "#858796",
                  titleMarginBottom: 10,
                  titleFontColor: "#6e707e",
                  titleFontSize: 14,
                  borderColor: "#dddfeb",
                  borderWidth: 1,
                  xPadding: 15,
                  yPadding: 15,
                  displayColors: false,
                  intersect: false,
                  mode: "index",
                  caretPadding: 10,
                  callbacks: {
                    label: function(tooltipItem, chart) {
                      var datasetLabel =
                        chart.datasets[tooltipItem.datasetIndex].label || "";
                      return (
                        datasetLabel + ": " + number_format(tooltipItem.yLabel) + " min."
                      );
                    }
                  }
                }
              }
            });

            // TODO: Reference to async updates
            // document
            //   .getElementById("randomizeData")
            //   .addEventListener("click", function() {
            //     barChartData.datasets.forEach(function(dataset) {
            //       dataset.data = dataset.data.map(function() {
            //         return randomScalingFactor();
            //       });
            //     });
            //     window.myBar.update();
            //   });
            </script>



          </div>
        </div>
      </div>
    </div>